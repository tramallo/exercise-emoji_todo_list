:root {
    --combo-box-hovering-color: dimgrey; 
    --combo-box-focus-color: blue;
    --combo-box-padding: 1vw;
    --combo-box-selector-color: lightgray;
}

.combobox {
    display: inline-block;
    margin: 0;

    border-radius: 5px;
    padding: var(--combo-box-padding);
    outline: none;
    position: relative; /* makes this element as the position context for the childs */
}
.combobox:focus-within ul {
    visibility: visible;
}
.combobox:focus-within input {
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
}

.combobox input {
    box-sizing: border-box;
    width: 100%;
    margin: 0;
    padding-block: 0;
    padding-inline: 0;
    padding: var(--combo-box-padding);

    border-style: none;
    border-radius: 5px;
    border-width: 1px;
    outline: none;

    background-color: var(--combo-box-selector-color);
}
.combobox input:read-only {
    cursor: pointer;
}
.combobox input:hover {
    background-color: var(--combo-box-hovering-color);
}
.combobox input:focus {
    background-color: var(--combo-box-focus-color);
}

.combobox ul {
    z-index: 1;
    position: absolute; /* sets the list out of the normal flow */
    
    margin: 0;
    padding: var(--combo-box-padding) 0;
    box-sizing: border-box;
    overflow: hidden;

    width: calc(100% - (var(--combo-box-padding) * 2));
    min-width: 1px;

    border-width: 1px;
    border-top-style: dashed;
    border-top-color: var(--combo-box-hovering-color);
    border-bottom-left-radius: 5px;
    border-bottom-right-radius: 5px;

    list-style-type: none;

    visibility: hidden;
    background-color: var(--combo-box-selector-color);
}
.combobox ul li {
    padding: 0 var(--combo-box-padding);
    overflow: hidden;
    cursor: pointer;
    outline: none;
    white-space: pre; /* makes empty string options visible */
}
.combobox ul li:hover {
    background-color: var(--combo-box-hovering-color);
}
.combobox ul li:focus {
    background-color: var(--combo-box-focus-color);
}